{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","console","log","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","autoFocus","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","eaxct","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAcAA,IAASC,cATc,CACnBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAKJ,IAAMC,EAAmBR,IAEnBS,EAAcT,IAASU,OAEvBC,EAAYX,IAASY,YACrBC,EAAiBb,IAASc,U,OC2DxBC,EA7EE,WAAO,IAAD,EAEOC,mBAAS,IAFhB,mBAEZC,EAFY,KAELC,EAFK,OAGaF,mBAAS,IAHtB,mBAGZG,EAHY,KAGFC,EAHE,OAIiBJ,oBAAS,GAJ1B,mBAIZK,EAJY,KAIAC,EAJA,OAKON,mBAAS,IALhB,mBAKZO,EALY,KAKLC,EALK,KAObC,EAAW,SAACC,GAAW,IAAD,EAGpBA,EADJC,OAAUC,EAFc,EAEdA,KAAMC,EAFQ,EAERA,MAEC,UAATD,EACJV,EAASW,GACW,aAATD,GACXR,EAAYS,IAIVC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBADO,UAILX,EAJK,gCAKQZ,EAAYwB,+BACzBhB,EACAE,GAPK,sDAUQV,EAAYyB,2BAA2BjB,EAAOE,GAVtD,yEAcTK,EAAS,KAAMW,SAdN,0DAAH,sDAoBlB,OACI,qCACI,uBAAML,SAAUA,EAAUM,UAAU,YAApC,UACI,uBACAR,KAAK,QACLS,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRV,MAAOZ,EACPQ,SAAUA,EACVW,UAAU,cAEV,uBACAR,KAAK,WACLS,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRV,MAAOV,EACPM,SAAUA,EACVW,UAAU,cAEV,uBACAC,KAAK,SACLD,UAAU,uBACVP,MAAOR,EACD,iBACA,WAELE,GAAS,sBAAMa,UAAU,YAAhB,SAA6Bb,OAE3C,sBAAMiB,QAhCY,kBAAMlB,GAAc,SAACmB,GAAD,OAAWA,MAgCnBL,UAAU,aAAxC,SACKf,EACK,UACA,wBCtBPqB,EA1CF,WAEX,IAAMC,EAAa,uCAAG,WAAOjB,GAAP,mBAAAK,EAAA,4DAGN,YAFKH,EAAWF,EAArBC,OAAUC,MAGfgB,EAAW,IAAIpC,EAAiBE,KAAKmC,mBACrB,WAARjB,IACRgB,EAAW,IAAIpC,EAAiBE,KAAKoC,oBANrB,SAQCrC,EAAYsC,gBAAgBH,GAR7B,OAQZI,EARY,OASlBC,QAAQC,IAAIF,GATM,2CAAH,sDAYnB,OACE,sBAAKZ,UAAU,gBAAf,UACE,cAAC,IAAD,CACEe,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAAEC,aAAc,MAEzB,cAAC,EAAD,IACA,sBAAKpB,UAAU,WAAf,UACE,yBACAI,QAASG,EACTf,KAAK,SACLQ,UAAU,WAHV,iCAKE,cAAC,IAAD,CAAiBe,KAAMM,SAEzB,yBACAjB,QAASG,EACTf,KAAK,SACLQ,UAAU,WAHV,iCAKE,cAAC,IAAD,CAAiBe,KAAMO,gB,gBCoClBC,EA7ED,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EAEP7C,oBAAS,GAFF,mBAE9B8C,EAF8B,KAErBC,EAFqB,OAGL/C,mBAAS4C,EAASI,MAHb,mBAG9BC,EAH8B,KAGpBC,EAHoB,KAK/BC,EAAa,uCAAG,4BAAApC,EAAA,yDACZqC,EAAKC,OAAOC,QAAQ,2FAC1BrB,QAAQC,IAAIkB,IACRA,EAHc,gCAIRzD,EAAU4D,IAAV,iBAAwBX,EAASY,KAAMC,SAJ/B,uBAKR5D,EAAe6D,WAAWd,EAASe,eAAeF,SAL1C,2CAAH,qDASbG,EAAgB,kBAAMb,GAAW,SAACtB,GAAD,OAAWA,MAE5CX,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACbL,EAAMM,iBADO,SAEPrB,EAAU4D,IAAV,iBAAwBX,EAASY,KAAMK,OAAO,CAChDb,KAAKC,IAHI,OAKbF,GAAW,GALE,2CAAH,sDAad,OACI,qBAAK3B,UAAU,QAAf,SAEI0B,EACI,mCACKD,GACG,qCACI,uBAAM/B,SAAUA,EAAUM,UAAU,sBAApC,UACA,uBACAC,KAAK,OACLC,YAAY,6CACZT,MAAOoC,EACP1B,UAAQ,EACRd,SAlBP,SAACC,GAAW,IACRG,EAAaH,EAAvBC,OAAUE,MACjBqC,EAAYrC,MAkBQ,uBACAQ,KAAK,SACLR,MAAM,iCACNO,UAAU,eAGV,sBAAMI,QAASoC,EACfxC,UAAU,oBADV,2CAQhB,qCACI,6BAAKwB,EAASI,OACbJ,EAASe,eAAiB,qBAAKG,IAAKlB,EAASe,gBAC7Cd,GACG,sBAAKzB,UAAU,gBAAf,UACI,sBAAMI,QAAS2B,EAAf,SACI,cAAC,IAAD,CAAiBhB,KAAM4B,QAE3B,sBAAMvC,QAASoC,EAAf,SACI,cAAC,IAAD,CAAiBzB,KAAM6B,iB,QC2BpCC,EA7FM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EAERlE,mBAAS,IAFD,mBAE3BmE,EAF2B,KAEpBC,EAFoB,OAGEpE,mBAAS,IAHX,mBAG3BqE,EAH2B,KAGfC,EAHe,KAK5BxD,EAAQ,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACA,KAAVoD,EADU,oDAIbzD,EAAMM,iBACF2C,EAAgB,GACF,KAAfU,EANU,wBAOHE,EAAgB1E,EACtB2E,MAAMC,MADgB,UACPP,EAAQQ,IADD,YACQC,gBARrB,SAScJ,EAAcK,UAAUP,EAAY,YATlD,cASHQ,EATG,iBAUaA,EAASL,IAAIM,iBAV1B,QAUTnB,EAVS,sBAYPf,EAAW,CACbI,KAAMmB,EACNY,UAAWC,KAAKC,MAChBC,UAAWhB,EAAQQ,IACnBf,iBAhBS,UAkBPhE,EAAUwF,WAAW,UAAUC,IAAIxC,GAlB5B,QAmBbwB,EAAS,IACTE,EAAc,IApBD,4CAAH,sDA2Cd,OACI,uBAAMxD,SAAUA,EAAUM,UAAU,cAApC,UACI,sBAAKA,UAAU,0BAAf,UACI,uBACAA,UAAU,sBACVP,MAAOsD,EACP1D,SA1BK,SAACC,GAAW,IACRG,EAAUH,EAAnBC,OAASE,MACjBuD,EAASvD,IAyBDQ,KAAK,OACLC,YAAY,4DACZ+D,UAAW,MAEnB,uBAAOhE,KAAK,SAASR,MAAM,SAASO,UAAU,2BAE9C,wBAAOkE,IAAI,cAAclE,UAAU,sBAAnC,UACI,8CACA,cAAC,IAAD,CAAiBe,KAAMoD,SAE3B,uBACI/B,GAAG,cACHnC,KAAK,OACLmE,OAAO,UACP/E,SApCa,SAACC,GAAW,IAGvB+E,EAFmB/E,EAAlBC,OAAQ+E,MAEO,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAmB,IACZC,EAAaD,EAA7BE,cAAgBD,OAEvBzB,EAAcyB,IAElBJ,EAAOM,cAAcR,IA2BjBlD,MAAO,CACH2D,QAAS,KAIhB7B,GACG,sBAAKjD,UAAU,0BAAf,UACI,qBACI0C,IAAKO,EACL9B,MAAO,CACH4D,gBAAiB9B,KAGzB,sBAAKjD,UAAU,qBAAqBI,QArCtB,kBAAM8C,EAAc,KAqClC,UACI,0CACA,cAAC,IAAD,CAAiBnC,KAAMiE,gBCzD5BC,EA7BF,SAAC,GAAiB,IAAfnC,EAAc,EAAdA,QAAc,EAEElE,mBAAS,IAFX,mBAEnBsG,EAFmB,KAEXC,EAFW,KAc1B,OAVAC,qBAAU,WACN7G,EAAUwF,WAAW,UAAUsB,YAAW,SAAAC,GACtC,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAAAtD,GAAG,oBACpCC,GAAGD,EAAIC,IACJD,EAAIvB,WAEXuE,EAAUI,QAEf,IAGC,sBAAKvF,UAAU,YAAf,UACI,cAAC,EAAD,CAAc8C,QAAWA,IACzB,qBAAK3B,MAAO,CAAEuE,UAAW,IAAzB,SACKR,EAAOO,KAAI,SAAC1C,GAAD,OACR,cAAC,EAAD,CAEAvB,SAAUuB,EACVtB,QAASsB,EAAMe,YAAchB,EAAQQ,KAFhCP,EAAMX,aCiChBuD,EAtDC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAa9C,EAAc,EAAdA,QAEtB+C,EAAUC,cAF0B,EAIElH,mBAASkE,EAAQiD,aAJnB,mBAInCC,EAJmC,KAInBC,EAJmB,KAiBpCvG,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBACFkD,EAAQiD,cAAgBC,EAFf,gCAGHlD,EAAQoD,cAAc,CACxBH,YAAaC,IAJR,OAMTJ,IANS,2CAAH,sDAUd,OACI,sBAAK5F,UAAU,YAAf,UACA,uBAAMN,SAAUA,EAAUM,UAAU,cAApC,UACI,uBACAX,SApBS,SAACC,GAAW,IAEXG,EACVH,EADAC,OAAUE,MAEdwG,EAAkBxG,IAiBdQ,KAAK,OACLkG,WAAS,EACTjG,YAAY,eACZT,MAAOuG,EACPhG,UAAU,cAEd,uBACIC,KAAK,SACLR,MAAM,iBACNO,UAAU,UACVmB,MAAO,CACHuE,UAAW,SAInB,sBAAM1F,UAAU,2BAA2BI,QAzCzB,WAClB/B,EAAY+H,UACZP,EAAQQ,KAAK,MAuCb,yBCTOC,EApCI,SAAC,GAAe,IAAdxD,EAAa,EAAbA,QAEjB,OAEA,8BACI,qBAAI3B,MAAO,CAAEoF,QAAS,OAAQC,eAAgB,SAAUd,UAAW,IAAnE,UACI,6BACI,cAAC,IAAD,CAAMe,GAAG,IAAItF,MAAO,CAAEuF,YAAa,IAAnC,SACI,cAAC,IAAD,CAAiB3F,KAAMC,IAAWC,MAAO,UAAWC,KAAK,WAGjE,6BACI,eAAC,IAAD,CACAuF,GAAG,WACHtF,MAAO,CACHwF,WAAY,GACZJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZC,SAAU,IAPd,UAUA,cAAC,IAAD,CAAiB/F,KAAMgG,IAAQ9F,MAAO,UAAWC,KAAK,OACtD,sBAAMC,MAAO,CAAEuE,UAAW,IAA1B,SACK5C,EAAQiD,YAAR,UACQjD,EAAQiD,YADhB,kBAEK,uBCgBXiB,EAzCI,SAAC,GAAyC,IAAvCpB,EAAsC,EAAtCA,YAAaqB,EAAyB,EAAzBA,WAAYnE,EAAa,EAAbA,QAE3C,OACI,eAAC,IAAD,WACKmE,GAAc,cAAC,EAAD,CAAYnE,QAASA,IACpC,cAAC,IAAD,UACKmE,EAEG,sBACI9F,MAAO,CACH+F,SAAU,IACVC,MAAO,OACPC,OAAQ,SACR1B,UAAW,GACXa,QAAS,OACTC,eAAgB,UAPxB,UAUI,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAMxE,QAASA,MAEnB,cAAC,IAAD,CAAOuE,OAAK,EAACC,KAAK,WAAlB,SACI,cAAC,EAAD,CACIxE,QAASA,EACT8C,YAAaA,SAKzB,mCACI,cAAC,IAAD,CAAO2B,OAAK,EAACD,KAAK,IAAlB,SACI,cAAC,EAAD,cCWbE,MA7Cf,WAAgB,IAAD,EAEW5I,oBAAS,GAFpB,mBAEN6I,EAFM,KAEAC,EAFA,OAGuB9I,oBAAS,GAHhC,mBAGNqI,EAHM,KAGMU,EAHN,OAIiB/I,mBAAS,MAJ1B,mBAINkE,EAJM,KAIG8E,EAJH,KA+Bb,OAzBAxC,qBAAU,WACR/G,EAAYwJ,oBAAmB,SAACC,GAC3BA,GACDH,GAAc,GACdC,EAAW,CACT7B,YAAa+B,EAAK/B,YAClBzC,IAAKwE,EAAKxE,IACV4C,cAAe,SAAC6B,GAAD,OAAUD,EAAK5B,cAAc6B,OAG9CH,EAAW,MAEbF,GAAQ,QAET,IAYD,mCACID,EAEF,cAAC,EAAD,CACA7B,YAdgB,WAClB,IAAMkC,EAAOzJ,EAAY2J,YACzBJ,EAAW,CACT7B,YAAa+B,EAAK/B,YAClBzC,IAAKwE,EAAKxE,IACV4C,cAAe,SAAC6B,GAAD,OAAUD,EAAK5B,cAAc6B,OAU5Cd,WAAYA,EACZnE,QAASA,IACP,qB,MCtCRmF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fd7cf8da.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCIWZeo04bHk_Bxcn10JuLvdiO-O8rGJMw\",\r\n    authDomain: \"nwitter-d7011.firebaseapp.com\",\r\n    projectId: \"nwitter-d7011\",\r\n    storageBucket: \"nwitter-d7011.appspot.com\",\r\n    messagingSenderId: \"834338910798\",\r\n    appId: \"1:834338910798:web:a63c94f5e8ceafc50b491f\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, {useState} from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n        target: { name, value },\r\n        } = event;\r\n            if (name === \"email\") {\r\n            setEmail(value);\r\n            } else if (name === \"password\") {\r\n            setPassword(value);\r\n            }\r\n        };\r\n        \r\n        const onSubmit = async (event) => {\r\n            event.preventDefault();\r\n            try {\r\n            let data;\r\n                if (newAccount) {\r\n                    data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                    );\r\n                } else {\r\n                    data = await authService.signInWithEmailAndPassword(email, password);\r\n                }\r\n                } \r\n            catch (error) {\r\n                setError(error.message);\r\n            }\r\n        };\r\n        \r\n        const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return(\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                required\r\n                value={email}\r\n                onChange={onChange}\r\n                className=\"authInput\"\r\n                />\r\n                <input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                required\r\n                value={password}\r\n                onChange={onChange}\r\n                className=\"authInput\"\r\n                />\r\n                <input \r\n                type=\"submit\"\r\n                className=\"authInput authSubmit\"\r\n                value={newAccount \r\n                    ? \"Create Account\" \r\n                    : \"Log In\"} \r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount \r\n                    ? \"Sign in\" \r\n                    : \"Create Acccount\"}\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm;","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"../fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n\r\n  const onSocialClick = async (event) => {\r\n      const {target: { name}, } = event;\r\n      let provider;\r\n      if(name === \"google\"){\r\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n      } else if(name=== \"github\"){\r\n        provider = new firebaseInstance.auth.GithubAuthProvider();\r\n      }\r\n      const data = await authService.signInWithPopup(provider);\r\n      console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button \r\n        onClick={onSocialClick} \r\n        name=\"google\" \r\n        className=\"authBtns\">\r\n          Continue with Google \r\n          <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button \r\n        onClick={onSocialClick} \r\n        name=\"github\" \r\n        className=\"authBtns\">\r\n          Continue with Github\r\n          <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"정말로 이 nweet을 삭제하시겠습니까?\");\r\n        console.log(ok)\r\n        if (ok){\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text:newNweet,\r\n        })\r\n        setEditing(false);\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {target: { value }, } = event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    return(\r\n        <div className=\"nweet\">\r\n            { \r\n            editing ?\r\n                <>\r\n                    {isOwner && (\r\n                        <>\r\n                            <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                            <input \r\n                            type=\"text\" \r\n                            placeholder=\"nweet을 편집하세요\" \r\n                            value={newNweet} \r\n                            required\r\n                            onChange={onChange}\r\n                            />\r\n                            <input\r\n                            type=\"submit\"\r\n                            value=\"업데이트 nweet\"\r\n                            className=\"formBtn\"\r\n                            />\r\n                            </form>\r\n                            <span onClick={toggleEditing}\r\n                            className=\"formBtn cancelBtn\">\r\n                                취소하기\r\n                            </span>\r\n                        </>\r\n                    )}\r\n                </>\r\n            :\r\n            <>\r\n                <h4>{nweetObj.text}</h4>\r\n                {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                {isOwner && (\r\n                    <div className=\"nweet_actions\"> \r\n                        <span onClick={onDeleteClick}>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </span>\r\n                        <span onClick={toggleEditing}>\r\n                            <FontAwesomeIcon icon={faPencilAlt}/>\r\n                        </span>\r\n                    </div>\r\n                )}\r\n            </>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Nweet;","import React, {useState} from \"react\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        if(nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\") {\r\n            const attachmentRef = storageService.\r\n            ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const { target: {value}} = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {target:{files}} = event;\r\n        // event안의 target으로 들어가 안의 files를 가져오는것을 뜻함.\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget: {result}, } = finishedEvent;\r\n            // finishedEvent의 currentTarger의 reuslt를 불러옴.\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                className=\"factoryInput__input\"\r\n                value={nweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"무슨 생각 중이신가요?\"\r\n                maxLength={120}\r\n            />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n        </div>\r\n        <label for=\"attach-file\" className=\"factoryInput__label\">\r\n            <span>Add photos</span>\r\n            <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input\r\n            id=\"attach-file\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={onFileChange}\r\n            style={{\r\n                opacity: 0,\r\n            }}\r\n        />\r\n\r\n        {attachment && (\r\n            <div className=\"factoryForm__attachment\">\r\n                <img\r\n                    src={attachment}\r\n                    style={{\r\n                        backgroundImage: attachment,\r\n                    }}\r\n                />\r\n                <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                    <span>Remove</span>\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                </div>\r\n            </div>\r\n        )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id:doc.id, \r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <NweetFactory userObj = {userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => \r\n                    <Nweet \r\n                    key={nweet.id} \r\n                    nweetObj={nweet} \r\n                    isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input \r\n            onChange={onChange}\r\n            type=\"text\"\r\n            autoFocus\r\n            placeholder=\"Display Name\"\r\n            value={newDisplayName}\r\n            className=\"formInput\"\r\n        />\r\n        <input\r\n            type=\"submit\"\r\n            value=\"Update Profile\"\r\n            className=\"formBtn\"\r\n            style={{\r\n                marginTop: 10,\r\n            }}\r\n        />\r\n        </form>\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n            Log Out\r\n        </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => {\r\n\r\n    return(\r\n\r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link \r\n                to=\"/profile\"\r\n                style={{\r\n                    marginLeft: 10,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    fontSize: 12,\r\n                    }}\r\n                >\r\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                <span style={{ marginTop: 10 }}>\r\n                    {userObj.displayName\r\n                        ? `${userObj.displayName}의 Profile`\r\n                        : \"Profile\"\r\n                    }\r\n                </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter =  ({ refreshUser, isLoggedIn, userObj}) => {\r\n\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn \r\n                ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile \r\n                                userObj={userObj}\r\n                                refreshUser={refreshUser} \r\n                            />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <Route eaxct path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n\r\n}\r\n\r\nexport default AppRouter","import React, {useEffect, useState} from 'react';\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(()=>{\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null)\n      }\n      setInit(true)\n    });\n  }, []) // firebase가 실행되기전 위의 isLoggedIn이 실행되기에 항상 null(로그인 되지 않음 으로 계산되어 loading이 뜨지 않는 버그가 생김. onAuthStateChanged를 사용하여 user의 변화가 생길경우 출력해줌.\n\n  const refreshUser = () => {\n    const user = authService.currentUser\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n\n  return (\n    <>\n      { init \n      ? \n      <AppRouter \n      refreshUser={refreshUser}\n      isLoggedIn={isLoggedIn} \n      userObj={userObj}/> \n      : \"Initializing...\"}\n      {/*<footer>&copy; Nwitter {new Date().getFullYear()} </footer>*/}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"components/style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}